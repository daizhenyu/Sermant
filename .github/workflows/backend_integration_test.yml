#name: Backend Integration Test
#env:
#  sermantVersion: 1.0.0
#on:
#  push:
#  pull_request:
#    branches:
#      - '*'
#    paths:
#      - 'sermant-agentcore/**'
#      - 'sermant-backend/**'
#      - '.github/workflows/backend*.yml'
#      - '.github/actions/scenarios/backend/memory/action.yml'
#      - '.github/actions/scenarios/backend/redis/action.yml'
#concurrency:
#  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}-${{ github.head_ref }}
#  cancel-in-progress: true
#jobs:
#  download-midwares-and-cache:
#    name: download midwares and cache
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - name: cache middlewares
#        uses: actions/cache@v3
#        with:
#          path: |
#            apache-zookeeper-*/
#          key: ${{ runner.os }}-middlewares-${{ github.run_id }}
#      - name: download middlewares
#        run: |
#          export ROOT_PATH=$(pwd)
#          bash ./sermant-integration-tests/scripts/tryDownloadMidware.sh zk
#          tar -zxf apache-zookeeper-3.6.3-bin.tar.gz
#  build-agent-and-cache:
#    name: build agent and cache
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - name: Set up JDK 8
#        uses: actions/setup-java@v2
#        with:
#          java-version: '8'
#          distribution: 'adopt'
#          cache: maven
#      - name: cache agent
#        uses: actions/cache@v3
#        with:
#          path: sermant-agent-*/
#          key: ${{ runner.os }}-agent-${{ github.run_id }}
#      - name: package agent
#        run: |
#          sed -i '/sermant-backend-lite/d' pom.xml
#          sed -i '/sermant-integration-tests/d' pom.xml
#          sed -i '/sermant-injector/d' pom.xml
#          mvn package -DskipTests -Ptest --file pom.xml
#  test-for-backend:
#    name: Test for backend
#    runs-on: ubuntu-latest
#    needs: [ build-agent-and-cache, download-midwares-and-cache ]
#    steps:
#      - uses: actions/checkout@v2
#      - name: set java version to environment
#        run: |
#          echo "javaVersion=8" >> $GITHUB_ENV
#      - name: start backend use memory test
#        uses: ./.github/actions/scenarios/backend/memory
#      - name: start backend use redis test
#        uses: ./.github/actions/scenarios/backend/redis
#
#
