name: Consumer Integration Test
env:
  sermantVersion: 1.0.0
on:
  push:
  pull_request:
    branches:
      - '*'
    paths:
      - 'sermant-agentcore/**'
#      消费demo位置
#      - 'sermant-integration-tests/agentcore-test/**'
#      - '.github/workflows/consumer*.yml'
#      - '.github/actions/common/consumer/action.yml'
#      - '.github/actions/scenarios/agentcore/action.yml'
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}-${{ github.head_ref }}
  cancel-in-progress: true
jobs:
  download-midwares-and-cache:
    name: download midwares and cache
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: cache zookeeper
        uses: actions/cache@v3
        with:
          path: apache-zookeeper-3.6.3-bin.tar.gz
          key: ${{ runner.os }}-apache-zookeeper-3.6.3
          restore-keys: |
            ${{ runner.os }}-apache-zookeeper-3.6.3
      - name: download zookeeper
        run: |
          export ROOT_PATH=$(pwd)
          bash ./sermant-integration-tests/scripts/tryDownloadMidware.sh zk
      - name: cache rocketmq
        uses: actions/cache@v3
        with:
          path: rocketmq-all-4.8.0-bin-release.zip
          key: ${{ runner.os }}-rocketmq-all-4.8.0-bin-release
          restore-keys: |
            ${{ runner.os }}-rocketmq-all-4.8.0-bin-release
      - name: download rocketmq
        run: |
          export ROOT_PATH=$(pwd)
          bash ./sermant-integration-tests/scripts/tryDownloadMidware.sh rocketmq
      - name: cache kafka
        uses: actions/cache@v3
        with:
          path: kafka_2.13-2.7.0.tgz
          key: ${{ runner.os }}-kafka_2.13-2.7.0
          restore-keys: |
            ${{ runner.os }}-kafka_2.13-2.7.0
      - name: download kafka
        run: |
          export ROOT_PATH=$(pwd)
          bash ./sermant-integration-tests/scripts/tryDownloadMidware.sh kafka
  build-agent-and-cache:
    name: build agent and cache
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
          cache: maven
      - name: cache agent
        uses: actions/cache@v3
        with:
          path: sermant-agent-*/
          key: ${{ runner.os }}-agent-${{ github.run_id }}
      - name: package agent
        run: |
          sed -i '/sermant-backend/d' pom.xml
          sed -i '/sermant-injector/d' pom.xml
          sed -i '/sermant-flowcontrol/d' sermant-plugins/pom.xml
          mvn package -DskipTests -Ptest --file pom.xml
      - name: move test demo
        run: |
          cp ./sermant-integration-tests/mq-consume-prohibition-test/prohibition-kafka-producer-demo/target/prohibition-kafka-producer-demo.jar sermant-agent-${{ env.sermantVersion }}/agent/
          cp ./sermant-integration-tests/mq-consume-prohibition-test/prohibition-kafka-consumer-demo/target/prohibition-kafka-consumer-demo.jar sermant-agent-${{ env.sermantVersion }}/agent/

  test-rocketMq-consumer:
    name: RocketMq consumer
    runs-on: ubuntu-latest
    needs: [build-agent-and-cache, download-midwares-and-cache]
    strategy:
      matrix:
        include:
          - rocketMqVersion: "4.8.0"
          - rocketMqVersion: "4.9.7"
          - rocketMqVersion: "5.0.0"
          - rocketMqVersion: "5.1.4"
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 100
      - name: set java version to environment
        run: |
          echo "javaVersion=8" >> $GITHUB_ENV
      - name: common operations
        uses: ./.github/actions/common/mq-consume-prohibition
      - name: (rocketMq) test allow rocketMq consumer before start
        if: ${{ matrix.rocketMqVersion != ''}}
        uses: ./.github/actions/scenarios/mq-consume-prohibition/rocketMq/allow-consumer-before-start
      - name: (kafka) test allow kafka consumer before start
        if: ${{ matrix.kafkaVersion != ''}}
        uses: ./.github/actions/scenarios/mq-consume-prohibition/kafka/allow-consumer-before-start
# 测试启动前开启消费，启动后不变
  test-for-allow-consumer-before-start:
    name: Allow consumer before start
    runs-on: ubuntu-latest
    needs: [build-agent-and-cache, download-midwares-and-cache]
    strategy:
      matrix:
        include:
          - kafkaVersion: "2.3.1"
          - kafkaVersion: "1.1.1"
          - kafkaVersion: "2.7.2"
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 100
      - name: set java version to environment
        run: |
          echo "javaVersion=8" >> $GITHUB_ENV
      - name: common operations
        uses: ./.github/actions/common/mq-consume-prohibition
      - name: (prohibit) test prohibit consumer before start
        if: ${{ matrix.rocketMqVersion != ''}}
        uses: ./.github/actions/scenarios/mq-consume-prohibition/rocketMq/allow-consumer-before-start
      - name: (kafka) test allow kafka consumer before start
        if: ${{ matrix.kafkaVersion != ''}}
        uses: ./.github/actions/scenarios/mq-consume-prohibition/kafka/allow-consumer-before-start
  # 测试启动前关闭消费
  test-for-prohibit-consumer-before-start:
    name: Prohibit consumer before start
    runs-on: ubuntu-latest
    needs: [build-agent-and-cache, download-midwares-and-cache]
    strategy:
      matrix:
        include:
          - rocketMqVersion: "4.8.0"
          - rocketMqVersion: "4.9.7"
          - rocketMqVersion: "5.0.0"
          - rocketMqVersion: "5.1.4"
          - kafkaVersion: "2.3.1"
          - kafkaVersion: "1.1.1"
          - kafkaVersion: "2.7.2"
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 100
      - name: set java version to environment
        run: |
          echo "javaVersion=8" >> $GITHUB_ENV
      - name: common operations
        uses: ./.github/actions/common/mq-consume-prohibition
      - name: (rocketMq) test prohibit rocketMq consumer before start
        if: ${{ matrix.rocketMqVersion != ''}}
        uses: ./.github/actions/scenarios/mq-consume-prohibition/rocketMq/prohibit-consumer-before-start
      - name: (kafka) test prohibit kafka consumer before start
        if: ${{ matrix.kafkaVersion != ''}}
        uses: ./.github/actions/scenarios/mq-consume-prohibition/kafka/prohibit-consumer-before-start
  # 测试运行时关闭消费
  test-for-prohibit-consumer-after-start:
    name: Prohibit consumer after start
    runs-on: ubuntu-latest
    needs: [build-agent-and-cache, download-midwares-and-cache]
    strategy:
      matrix:
        include:
          - rocketMqVersion: "4.8.0"
          - rocketMqVersion: "4.9.7"
          - rocketMqVersion: "5.0.0"
          - rocketMqVersion: "5.1.4"
          - kafkaVersion: "2.3.1"
          - kafkaVersion: "1.1.1"
          - kafkaVersion: "2.7.2"
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 100
      - name: set java version to environment
        run: |
          echo "javaVersion=8" >> $GITHUB_ENV
      - name: common operations
        uses: ./.github/actions/common/mq-consume-prohibition
      - name: (rocketMq) test prohibit rocketMq consumer after start
        if: ${{ matrix.rocketMqVersion != ''}}
        uses: ./.github/actions/scenarios/mq-consume-prohibition/rocketMq/prohibit-consumer-after-start
      - name: (kafka) test prohibit kafka consumer after start
        if: ${{ matrix.kafkaVersion != ''}}
        uses: ./.github/actions/scenarios/mq-consume-prohibition/kafka/prohibit-consumer-after-start
  # 测试运行时关闭消费
  test-for-allow-consumer-after-start:
    name: Allow consumer after start
    runs-on: ubuntu-latest
    needs: [build-agent-and-cache, download-midwares-and-cache]
    strategy:
      matrix:
        include:
          - rocketMqVersion: "4.8.0"
          - rocketMqVersion: "4.9.7"
          - rocketMqVersion: "5.0.0"
          - rocketMqVersion: "5.1.4"
          - kafkaVersion: "2.3.1"
          - kafkaVersion: "1.1.1"
          - kafkaVersion: "2.7.2"
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 100
      - name: set java version to environment
        run: |
          echo "javaVersion=8" >> $GITHUB_ENV
      - name: common operations
        uses: ./.github/actions/common/mq-consume-prohibition
      - name: (rocketMq) test allow rocketMq consumer after start
        if: ${{ matrix.rocketMqVersion != ''}}
        uses: ./.github/actions/scenarios/mq-consume-prohibition/rocketMq/allow-consumer-after-start
      - name: (kafka) test allow kafka consumer after start
        if: ${{ matrix.kafkaVersion != ''}}
        uses: ./.github/actions/scenarios/mq-consume-prohibition/kafka/allow-consumer-after-start